{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Jerry's Knowledge Base","text":"<p>\u6b22\u8fce\uff0c\u4f60\u53ef\u4ee5\u5728\u5de6\u4fa7\u5bfc\u822a\u4e2d\u6309\u76ee\u5f55\u6d4f\u89c8\u7b14\u8bb0\u3002\u7528 Typora \u76f4\u63a5\u7f16\u8f91 docs/ \u4e0b\u7684 Markdown \u6587\u4ef6\uff0cpush \u540e\u4f1a\u81ea\u52a8\u53d1\u5e03\u5230 GitHub Pages\u3002</p> <p>\u76ee\u5f55\u7ed3\u6784\uff1adocs/ \u4e0b\u81ea\u7531\u5206\u7ec4\uff0c\u652f\u6301\u591a\u7ea7\u5b50\u76ee\u5f55</p> <p>\u56fe\u7247\uff1a\u5efa\u8bae\u5728 Typora \u8bbe\u7f6e\u4e3a\u201c\u63d2\u5165\u56fe\u7247\u65f6\u590d\u5236\u5230 docs/assets\uff0c\u5e76\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u201d</p> <p>\u4ee3\u7801\uff1a\u4f7f\u7528\u4e09\u53cd\u5f15\u53f7\u6807\u6ce8\u8bed\u8a00\uff0c\u4f8b\u5982 <code>bash\u3001</code>python\uff0c\u7ad9\u70b9\u4f1a\u81ea\u52a8\u9ad8\u4eae\u5e76\u5e26\u590d\u5236\u6309\u94ae</p> <p>\u793a\u4f8b\u94fe\u63a5\uff1a</p> <p>\u5f00\u53d1/CICD.md</p>"},{"location":"%E5%BC%80%E5%8F%91/CICD/","title":"CICD","text":""},{"location":"%E5%BC%80%E5%8F%91/CICD/#_1","title":"\u5982\u4f55\u914d\u7f6e\u4e00\u6b21\u63a8\u9001\u5230\u591a\u4e2a\u4ed3\u5e93","text":"<p>\u9996\u5148\u5728\u5c40\u57df\u7f51gitea\u548c\u516c\u7f51github\u4e0a\u90fd\u521b\u5efa\u597d\u4ed3\u5e93</p> <p>\u5148\u6dfb\u52a0Gitea\u4f5c\u4e3a\u7b2c\u4e8c\u4e2apush\u5730\u5740\uff0cpush\u65f6\u5148\u63a8Gitea\uff08\u5185\u7f51\u5feb\uff09\uff0c\u518d\u63a8GitHub\uff08\u5916\u7f51\u6162\uff09</p> <pre><code>git remote set-url --add --push origin http://192.168.1.10:3000/zhanghui/mysql-sea-syncweb.git\ngit remote set-url --add --push origin https://github.com/freecow/mysql-sea-syncweb.git\n</code></pre> <p>\u6dfb\u52a0GitHub\u4f5c\u4e3a\u7b2c\u4e00\u4e2apush\u5730\u5740</p> <pre><code>git remote set-url --add --push origin https://github.com/freecow/mysql-sea-syncweb.git\n</code></pre> <p>\u9a8c\u8bc1\u914d\u7f6e</p> <pre><code>git remote -v\n\n# \u5e94\u8be5\u770b\u5230\norigin  https://github.com/freecow/mysql-sea-syncweb.git (fetch)\norigin  http://192.168.1.10:3000/\u4f60\u7684\u7528\u6237\u540d/mysql-sea-syncweb.git (push)\norigin  https://github.com/freecow/mysql-sea-syncweb.git (push)\n</code></pre> <p>\u6d4b\u8bd5\u63a8\u9001</p> <pre><code># \u63a8\u9001\u5f53\u524d\u5206\u652f\uff08\u4f1a\u540c\u65f6\u63a8\u9001\u5230GitHub\u548cGitea\uff09\ngit push origin dev\n\n# \u63a8\u9001\u6240\u6709\u5206\u652f\ngit push origin --all\n\n# \u63a8\u9001\u6807\u7b7e\ngit push origin --tags\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/CICD/#_2","title":"\u5982\u4f55\u4fdd\u7559\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u53c2\u770b\u5f53\u524d\u8fdc\u7a0b\u4ed3\u5e93</p> <pre><code>git remote -v\n</code></pre> <p>\u6dfb\u52a0Gitea\u8fdc\u7a0b\u4ed3\u5e93</p> <pre><code>git remote add gitea http://192.168.1.10:3000/\u4f60\u7684\u7528\u6237\u540d/mysql-sea-syncweb.git\n\n# \u73b0\u5728\u6709\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff1a\n# origin -&gt; GitHub\n# gitea -&gt; Gitea\n</code></pre> <p>\u6d4b\u8bd5\u63a8\u9001</p> <pre><code># \u63a8\u9001\u5230GitHub\ngit push origin main\n\n# \u63a8\u9001\u5230Gitea\ngit push gitea main\n\n# \u6216\u540c\u65f6\u63a8\u9001\u5230\u4e24\u4e2a\u4ed3\u5e93\ngit push origin main &amp;&amp; git push gitea main\n</code></pre>"},{"location":"%E5%BC%80%E5%8F%91/CICD/#workflow","title":"\u5982\u4f55\u7f16\u5199workflow","text":"<p>\u5728.github\u6216.gitea\u76ee\u5f55\u4e2dworkflows\u4e0b\u5206\u522b\u521b\u5efadocker-build.yml</p> <pre><code># \u5de5\u4f5c\u6d41\u76ee\u5f55\u72ec\u7acb\n- GitHub: .github/workflows/\n- Gitea: .gitea/workflows/\n- \u4e24\u8005\u4e92\u4e0d\u5e72\u6270\n\n# Git\u652f\u6301\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\n- \u53ef\u4ee5\u540c\u65f6\u63a8\u9001\u5230\u591a\u4e2aremote\n</code></pre> <p>\u5728Gitea\u4ed3\u5e93\u4e2d\u914d\u7f6e\u4ee5\u4e0bSecrets\uff0c\u8def\u5f84\u4e3a\u4ed3\u5e93\u540d \u2192 \u8bbe\u7f6e \u2192 Actions \u2192 \u5bc6\u94a5\uff0c\u5373REGISTRY_USERNAME\u548cREGISTRY_PASSWORD</p> <p></p> <p>\u4e0b\u9762\u662f.gitea/workflow/docker-build.yml</p> <pre><code># \u5de5\u4f5c\u6d41\u540d\u79f0\nname: Build And Push Images\n\n# \u89e6\u53d1\u6761\u4ef6\non:\n  # \u4efb\u610f\u5206\u652f\uff0cmain\u53cadev\u7b49\u90fd\u89e6\u53d1\n  push: {}\n  # \u624b\u52a8\u89e6\u53d1\n  workflow_dispatch: {}\n\njobs:\n  build-and-push: # \u5b9a\u4e49Job\n    name: Build ${{ matrix.component }} for ${{ matrix.arch }}\n    # \u8fd0\u884c\u5668\n    runs-on: ubuntu-latest\n    env: # \u5168\u5c40\u53d8\u91cf\n      DOCKER_BUILDKIT: \"1\"\n      # UCloud\u4ed3\u5e93\u5730\u5740\n      REGISTRY: uhub.service.ucloud.cn\n      # UCloud\u547d\u540d\u7a7a\u95f4\n      NAMESPACE: igalaxycn\n    strategy:\n      # \u4e00\u4e2a\u5931\u8d25\u4e0d\u5f71\u54cd\u5176\u5b83\u77e9\u9635\u9879\u7ee7\u7eed\u8dd1\n      fail-fast: false\n      matrix: # \u4ea4\u53c9\u77e9\u9635\n        arch: [ amd64, arm64 ] # \u4e24\u4e2a\u67b6\u6784\n        component: [ backend, frontend ] # \u4e24\u4e2a\u7ec4\u4ef6\n    steps:\n      - name: Checkout # \u62c9\u53d6\u4ee3\u7801\n        uses: actions/checkout@v4\n\n      # \u8bbe\u7f6e\u955c\u50cftags\uff0c\u6807\u7b7e\u683c\u5f0f\u4e3a&lt;arch&gt;-&lt;YYYYMMDD&gt;-&lt;shortsha&gt;\uff0c\u907f\u514d\u540c\u65e5\u91cd\u590d\n      - name: Set tags (date + short sha) \n        id: date\n        run: |\n          # \u5f53\u5929\u65e5\u671f\n          echo \"DATE_TAG=$(date +%Y%m%d)\" &gt;&gt; $GITHUB_ENV\n          # \u5f53\u524d\u63d0\u4ea4\u7684 7 \u4f4d\u77ed SHA\n          echo \"SHORT_SHA=$(git rev-parse --short=7 HEAD)\" &gt;&gt; $GITHUB_ENV\n\n      # \u5b89\u88c5binfmt\uff0c\u5141\u8bb8\u5728x86 Runner\u4e0a\u6784\u5efaarm64\u7b49\u8de8\u67b6\u6784\u955c\u50cf\uff08\u9700\u8981\u7279\u6743\uff09\n      - name: Enable binfmt for cross-arch\n        run: |\n          docker run --privileged --rm tonistiigi/binfmt --install all\n\n      # \u767b\u5f55 UCloud \u955c\u50cf\u4ed3\u5e93\n      - name: Docker login (UCloud)\n        run: |\n          # \u4e3a\u517c\u5bb9\u5386\u53f2\u53d8\u91cf\u540d\uff0c\u4f9d\u6b21\u5c1d\u8bd5UCLOUD_USERNAME -&gt; DOCKER_USERNAME -&gt; REGISTRY_USERNAME\n          USERNAME=\"${{ secrets.UCLOUD_USERNAME }}\"\n          [ -z \"$USERNAME\" ] &amp;&amp; USERNAME=\"${{ secrets.DOCKER_USERNAME }}\"\n          [ -z \"$USERNAME\" ] &amp;&amp; USERNAME=\"${{ secrets.REGISTRY_USERNAME }}\"\n\n          PASSWORD=\"${{ secrets.UCLOUD_PASSWORD }}\"\n          [ -z \"$PASSWORD\" ] &amp;&amp; PASSWORD=\"${{ secrets.DOCKER_PASSWORD }}\"\n          [ -z \"$PASSWORD\" ] &amp;&amp; PASSWORD=\"${{ secrets.REGISTRY_PASSWORD }}\"\n\n          if [ -z \"$USERNAME\" ] || [ -z \"$PASSWORD\" ]; then\n            echo \"username/password not provided. Please set one of the following secrets:\" &gt;&amp;2\n            echo \"  - UCLOUD_USERNAME / UCLOUD_PASSWORD (preferred)\" &gt;&amp;2\n            echo \"  - DOCKER_USERNAME / DOCKER_PASSWORD\" &gt;&amp;2\n            echo \"  - REGISTRY_USERNAME / REGISTRY_PASSWORD\" &gt;&amp;2\n            exit 1\n          fi\n\n          echo \"Using registry: $REGISTRY\"\n          echo \"$PASSWORD\" | docker login \"$REGISTRY\" --username \"$USERNAME\" --password-stdin\n\n      # \u786e\u5b9a\u955c\u50cf\u6784\u5efaDockerfile\n      - name: Select Dockerfile and image name\n        id: select\n        run: |\n          # \u6839\u636e\u77e9\u9635\u4e2d\u7684 component \u9009\u62e9 Dockerfile \u4e0e\u955c\u50cf\u540d\uff0c\u5199\u5165 GITHUB_ENV\n          if [ \"${{ matrix.component }}\" = \"backend\" ]; then\n            echo \"DOCKERFILE=Dockerfile.backend\" &gt;&gt; $GITHUB_ENV\n            echo \"IMAGE_NAME=mysql-sea-syncweb-backend\" &gt;&gt; $GITHUB_ENV\n          else\n            echo \"DOCKERFILE=Dockerfile.frontend\" &gt;&gt; $GITHUB_ENV\n            echo \"IMAGE_NAME=mysql-sea-syncweb-frontend\" &gt;&gt; $GITHUB_ENV\n          fi\n\n      # \u6784\u5efa\u955c\u50cf\n      - name: Build image\n        run: |\n          # \u6253\u5305\u6807\u7b7e\n          FULL_IMAGE=\"$REGISTRY/$NAMESPACE/$IMAGE_NAME:${{ matrix.arch }}-$DATE_TAG-$SHORT_SHA\"\n          echo \"Building $FULL_IMAGE with $DOCKERFILE\"\n          # \u6784\u5efa\u6307\u5b9a\u67b6\u6784\u955c\u50cf\uff0cbackend\u4e0efrontend\u7684amd64/arm64\u56db\u4e2a\u955c\u50cf\n          docker build \\\n            --platform linux/${{ matrix.arch }} \\\n            -f \"$DOCKERFILE\" \\\n            -t \"$FULL_IMAGE\" \\\n            .\n\n      # \u63a8\u9001\u955c\u50cf\n      - name: Push image\n        run: |\n          FULL_IMAGE=\"$REGISTRY/$NAMESPACE/$IMAGE_NAME:${{ matrix.arch }}-$DATE_TAG-$SHORT_SHA\"\n          echo \"Pushing $FULL_IMAGE with retry...\"\n          # \u6700\u591a5\u6b21\u91cd\u8bd5\n          max=5\n          n=1\n          until [ $n -gt $max ]\n          do\n            # \u63a8\u9001\u955c\u50cf\n            if docker push \"$FULL_IMAGE\"; then\n              echo \"Push succeeded\"\n              break\n            fi\n            rc=$?\n            # \u5931\u8d25\u540e15s\u300130s\u300145s\u300160s\u300175s\u56de\u9000\u91cd\u8bd5\n            wait=$(( n * 15 ))\n            echo \"Push failed (rc=$rc). Retry $n/$max after ${wait}s...\"\n            # \u6bcf\u6b21\u91cd\u8bd5\u524d\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u767b\u5f55\uff0c\u4ee5\u7f13\u89e3\u5076\u53d1 50x/\u9274\u6743\u95ee\u9898\n            if [ $n -lt $max ]; then\n              USERNAME=\"${{ secrets.UCLOUD_USERNAME }}\"; [ -z \"$USERNAME\" ] &amp;&amp; USERNAME=\"${{ secrets.DOCKER_USERNAME }}\"; [ -z \"$USERNAME\" ] &amp;&amp; USERNAME=\"${{ secrets.REGISTRY_USERNAME }}\";\n              PASSWORD=\"${{ secrets.UCLOUD_PASSWORD }}\"; [ -z \"$PASSWORD\" ] &amp;&amp; PASSWORD=\"${{ secrets.DOCKER_PASSWORD }}\"; [ -z \"$PASSWORD\" ] &amp;&amp; PASSWORD=\"${{ secrets.REGISTRY_PASSWORD }}\";\n              if [ -n \"$USERNAME\" ] &amp;&amp; [ -n \"$PASSWORD\" ]; then\n                echo \"$PASSWORD\" | docker login \"$REGISTRY\" --username \"$USERNAME\" --password-stdin || true\n              fi\n              sleep $wait\n            fi\n            n=$(( n + 1 ))\n          done\n          if [ $n -gt $max ]; then\n            echo \"Push failed after $max attempts\" &gt;&amp;2\n            exit 1\n          fi\n</code></pre>"},{"location":"%E9%9A%8F%E7%AC%94/","title":"Blog","text":""}]}